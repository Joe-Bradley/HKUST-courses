--------------------3.23----------------------
#include<iostream>
using namespace std;
int main()
{
	char ch;
	while((ch=cin.get())!='\n')
	{   
		if(ch>='a'&&ch<='w'||ch>='A'&&ch<='W')
		{ch=ch+'d'-'a';cout<<ch;}
        else if(ch>='w'&&ch<='z')
		{ch='c'+(ch-'z');cout<<ch;}
		else if(ch>='W'&&ch<='Z')
		{ch='C'+(ch-'Z');cout<<ch;}
		else{cout<<ch;}
	}
	cout<<endl;
	return 0;
}


-------------------3.25-------------------
#include<iostream>
using namespace std;
int main()
{
	int a;
	unsigned int d,c,b=0x80000000;
	cout<<"输入一个整数";
	cin>>a;
	if(a>=0)
	{a=a;}
	else{a=-a,a=a|b;}
    while(b!=0)
	{c=b&a;b>>=1;
	if(c!=0)cout<<1;
	else cout<<0;}
	cout<<endl;
	return 0;}


-------------------4.3------------------------
#include<iostream>
#include<cmath>
using namespace std;
int main()
{
   double b,c,x1,x2,x;
   cout<<"分别输入b,c的值";
   cin>>b>>c;
   if(b*b-4*c>0)
   {x1=(-b+pow(b*b-4*c,0.5))/2,
   x2=(-b-pow(b*b-4*c,0.5))/2;
   cout<<cout.precision(10)<<x1<<"<=x<="<<cout.precision(10)<<x2<<endl;
   }
   else if(b*b-4*c==0)
   {cout<<"x="<<-b/2<<endl;}
   else
   {cout<<"无解"<<endl;}
   return 0;
  }


--------------------------4.4-----------------
#include<iostream>
#include<cmath>
using namespace std;
int main()
{
	double x1,y1,x2,y2,x3,y3;
	cout<<"输入三个点的坐标";
	cin>>x1>>y1>>x2>>y2>>x3>>y3;
	if(x2*y3-x3*y2+x3*y1-x1*y3+x1*y2-x2*y1==0)
	{cout<<"此三点共线"<<endl;}
	else
	{cout<<"三点不共线"<<endl;}
	cout<<endl;
	return 0;
}


-------------------4.12----------------------
#include<iostream>
#include<cmath>
using namespace std;
int main()
{
	int a,b;
	cout<<"输入正奇数";
	cin>>a;
	b=pow(2,a-1);
	if(a>1&&b%a!=1)
	{cout<<"a一定为合数";}
	else
	{cout<<"a可能为素数";}
	cout<<endl;
	return 0;
}


---------------------4.13---------------------
#include<iostream>
#include<cmath>
using namespace std;
int main()
{

	int i,x,y;
	cout<<"输入一个数";
	cin>>x;
	while(i!=x)
	{y=x%i;i=1;i++;
	if(y=0){x=x/i;}
	cout<<i<<"\t";
	}
    cout<<endl;
	return 0;
}

---------------------5.1---------------------
#include<iostream>
using namespace std;
int main()
{ double a[20];
int i;
for(i=0;i<20;i++) cin>>a[i];
cout<<"这20个数中在[5,10)中的有：";
for(i=0;i<20;i++)
if(a[i]<10&&a[i]>=5) 

cout<<a[i]<<" ";
cout<<endl;
return 0;
}


---------------------5.2---------------------
#include<iostream>
#include<iomanip>
using namespace std;
int main()
{ double a[20];double b[20];double c[20];
int i;
for(i=0;i<20;i++) cin>>a[i];
cout<<"这20个数中最接近3.1415926的有：";
for(i=0;i<20;i++)
if(a[i]<=3.1415926) {b[i]=a[i]; c[i]=0;}
else {c[i]=a[i];b[i]=0;}
double m,n;
m=b[0];
{for(i=0;i<20;i++)
if(b[i]>m) m=b[i];
n=c[0];
for(i=0;i<20;i++)
if(c[i]<n&&c[i]>0) n=c[i];}
if(m+n<2*3.1415926) cout<<fixed<<setprecision(7)<<m<<endl;
else if(m+n==2*3.1415926) cout<<fixed<<setprecision(7)<<m<<"\t"<<n<<endl;
else cout<<fixed<<setprecision(7)<<n<<endl;
return 0;
}


---------------------11.1---------------------
class A
{
private:
	int x;
	static int max;
public:
	A(int xx=0) { x=xx; if(x>max) max=x; }
	A(A &ob) { x=ob.x; if(x>max) max=x; }
	~A() { }
	void show() { cout<<"x="<<x<<endl; }
	static int getMax() { return max; }
};
int A::max=0x80000000;

main：
	A oa(10),ob(100);  A *p; p=new A(345);
	delete p;    cout<<A::getMax()<<endl;


---------------------11.2---------------------
class A
{
private:
	int x;
	static int pos,zero,neg;
public:
	A(int xx=0) { x=xx; if(x>0) pos++; else if(x<0) neg++; else zero++; }
	A(A &ob) { x=ob.x; if(x>0) pos++; else if(x<0) neg++; else zero++; }
	~A() { if(x>0) pos--; else if(x<0) neg--; else zero--; }
	void show() { cout<<"x="<<x<<endl; }
	void set(int xx)
	{ if(x>0) pos--; else if(x<0) neg--; else zero--; x=xx;
		if(x>0) pos++; else if(x<0) neg++; else zero++; }
	static void showCount() 
	{ cout<<"正值对象："<<pos<<"\t0值对象："<<zero<<"\t负值对象："<<neg<<endl;}
};
int A::pos=0,A::zero=0,A::neg=0;

main：
	A oa(12),ob(-1),oc(110);  
	{ 	A d[20];  A::showCount();  }
	A::showCount();


---------------------11.3---------------------
11.3 编程定义链表结点类node，它含一个int型变量x和后向指针next，
定义静态成员变量head和tail作为链表的头指针和尾指针，静态成员函数
getHead()取得链表头指针head，静态成员函数show()输出链表的值，
类node的带参构造函数自动将该结点接入链表末尾，析构函数自动将该
结点从链表中删去。主函数验证。
//类node的定义
class node
{
private:
	int x;
	node *next;
	static node *head,*tail;
public:
	node(int ix=0);
	~node();
	static node *getHead();
	static void show();
};
node *node::head=0,*node::tail=0;
node::node(int ix)
{	x=ix;  next=0;
	if(head==0) head=tail=this;
	else { tail->next=this; tail=this; }
}
node::~node()
{	node *p1,*p2;
	for(p1=0,p2=head;p2!=0&&p2!=this;p1=p2,p2=p2->next);
	if(p1!=0)  p1->next=p2->next;
	else head=p2->next;
	if(tail==p2) tail=p1;
}
node *node::getHead()
{	return head;  }
void node::show()
{	for(node *p=head;p!=0;p=p->next) cout<<p->x<<"\t"; cout<<endl; }

main：
	int xx;
	while(cin>>xx) {  new node(xx); }  cin.clear();
	node::show();
	while(node::getHead()) delete node::getHead();
	node oa(123),ob(345),oc[10];  node::show();


---------------------11.5---------------------
class Time
{
private:
	int hour,minute,second;
public:
	Time(int hh=0,int mm=0,int ss=0);
	void show() {  cout<<hour<<":"<<minute<<":"<<second<<endl; }
	friend Time interval(Time t1,Time t2);
};
Time::Time(int hh,int mm,int ss)
{	int s=hh*3600+mm*60+ss;  s=s%(24*3600);  if(s<0) s+=24*3600;
	hour=s/3600;  minute=s%3600/60;  second=s%60;
}
Time interval(Time t1,Time t2)
{	int s1=t1.hour*3600+t1.minute*60+t1.second;
	int s2=t2.hour*3600+t2.minute*60+t2.second;
	if(s1>s2)  return Time(0,0,s1-s2);
	else       return Time(0,0,s2-s1);
}

main：
	Time t1(12,30,5),t2(20,19,2),t;  t1.show();  t2.show();
	t=interval(t1,t2);   t.show();


---------------------11.7---------------------
class vector
{
private:
	double x,y;
public:
	vector(double xx=0,double yy=0) { x=xx; y=yy; }
	void show() { cout<<"[ "<<x<<"  "<<y<<" ]"<<endl; }
	friend vector scale(vector v,double s);
	friend vector rotate(vector v,double stia);
};
vector scale(vector v,double s)
{	return vector(v.x*s,v.y*s);  } //{vector c;c.x=v.x*s;c.y=v.y*s;return c;}
vector rotate(vector v,double sita)
{   double c=cos(sita),s=sin(sita); return vector(v.x*c-v.y*s;v.x*s+v.y*c);}

main：
	vector v(1,-2);  v.show();
	v=scale(v,3);  v=rotate(v,3.1415927/2);  v.show();


---------------------11.8---------------------
#include<iostream>
using namespace std;
class node
{
private:
	int x;
	node *next;
	static node *head,*tail; 
public:
	node(int ix=0);
	~node();
	static node *getHead();
	static void show();
};
node *node::head=0,*node::tail=0;
node::node(int ix)
{
	x=ix; next=0;
	if(head==0) head=tail=this;
	else {tail->next=this;tail=this;}
}
node::~node()
{
	node *p1,*p2;
	for(p1=0,p2=head;p2!=0&&p2!=this;p1=p2,p2=p2->next);
	if(p1!=0) p1->next=p2->next;
	else head=p2->next;
	if(tail==p2) tail=p1;
}
node *node::getHead()
{return head;}
void node::show()
{
	for(node *p=head;p!=0;p=p->next)
    cout<<p->x<<"\t";cout<<endl;
}
int main()
{
	int xx;
	while(cin>>xx)
	{new node(xx);}
	cin.clear();
	node::show();
	while(node::getHead())
		delete node::getHead();
	node oa(123),ob(345),oc[10];
	node::show();
	return 0;
}


---------------------11.9---------------------
#include<iostream>
using namespace std;
class Time
{
private:
	int h,m,s;
public:
	Time(int hh=0,int mm=0,int ss=0);
	void show()
	{cout<<h<<":"<<m<<":"<<s<<endl;}
	friend Time interval(Time t1,Time t2);
};
Time::Time(int hh,int mm,int ss)
{
	int sum=0;
	sum=3600*hh+60*mm+ss;
	if(sum<0)sum+=24*3600;
	h=sum/3600;m=sum%3600/60;s=sum%60;
}

Time interval(Time t1,Time t2)
{
	int s1=t1.h*3600+t1.m*60+t1.s;
	int s2=t2.h*3600+t2.m*60+t2.s;
	if(s1>s2)  return Time(0,0,s1-s2);
	else       return Time(0,0,s2-s1);
}
int main()
{
	Time t1(12,30,5),t2(20,19,2),t;
	t1.show();t2.show();
	t=interval(t1,t2);
	t.show();
	return 0;
}


---------------------11.10---------------------
#include<iostream>
#include<cmath>
using namespace std;
class vector
{
private:
	double x,y;
public:
	vector(double xx=0,double yy=0) { x=xx; y=yy; }
	void show() { cout<<"[ "<<x<<"  "<<y<<" ]"<<endl; }
	friend vector scale(vector v,double s);
	friend vector rotate(vector v,double stia);
};
vector scale(vector v,double s)
{	return vector(v.x*s,v.y*s);  } //{vector c;c.x=v.x*s;c.y=v.y*s;return c;}
vector rotate(vector v,double sita)
{   double c=cos(sita),s=sin(sita); return vector(v.x*c-v.y*s,v.x*s+v.y*c);}
int main()
{
	vector v(1,-2);
	v.show();
	v=scale(v,3);
	v=rotate(v,3.1415927/2);
	v.show();
	return 0;
}

---------------------11.11---------------------
#include<iostream>
using namespace std;
class Date
{private:
int y,m,da;
public:
	Date(int yy=0,int mm=0,int dd=0){y=yy;m=mm;da=dd;}
	void show(){cout<<y<<"年"<<m<<"月"<<da<<"日"<<endl;}
	friend class Person;
};
class Person
{private: char Name[20],Sex[4];
Date Birthday;
   
public:Person(char*Na,char*Se,int yy,int mm,int dd):Birthday(yy,mm,dd){	 strcpy(Name,Na); strcpy(Sex,Se);  }
	   void show()
	   {	cout<<Name<<"\t"<<Sex<<"\t"<<endl;
	        Birthday.show();
			
	}
    void set(char *Na,char *Se,int yy,int mm,int dd);
	int age(Date &d){if(d.m>Birthday.m) return d.y-Birthday.y+1;
   else if(d.m==Birthday.m) {if(d.da>=Birthday.da) return d.y-Birthday.y+1; else return d.y-Birthday.y;} 
    else {return d.y-Birthday.y;}
	} 
};


int main()
{
Person p1("张三","男",2017,5,4) ,p2("李四","女",2017,5,5),p3("王五","男",2017,5,6);
p1.show();
Date today(2017,5,5); 
cout<<"年龄:"<<p1.age(today)<<"岁"<<endl;
p2.show();
cout<<"年龄:"<<p2.age(today)<<"岁"<<endl;
p3.show();
cout<<"年龄:"<<p3.age(today)<<"岁"<<endl;
return 0;
}


---------------------11.12---------------------
#include<iostream>
#include<cmath>
using namespace std;
const double eps=1e-7;
class fraction
{
private:
	int n,d;
public:
	fraction(int nu=0,int de=1)
	{n=nu;d=de;}
	void show()
	{cout<<n<<"/"<<d<<endl;}
	fraction operator+(fraction &f){return fraction(f.d*n+f.n*d,d*f.d);};
	fraction operator-(fraction &f){return fraction(f.d*n-f.n*d,d*f.d);};
	fraction operator*(fraction &f){return fraction(f.d*d,f.n*n);};
	fraction operator/(fraction &f);

	bool fraction operator<(fraction &f){double c=(f.d*n-f.n*d-0.0)/(d*f.d-0.0);if(c<eps) return true;else return false;};
    bool operator<=(fraction &f){double c=(f.d*n-f.n*d-0.0)/(d*f.d-0.0);if(c<=eps) return true;else return false;};
	bool fraction operator>(fraction &f){double c=(f.d*n-f.n*d-0.0)/(d*f.d-0.0);if(c>eps) return true;else return false;};
	bool fraction operator>=(fraction &f){double c=(f.d*n-f.n*d-0.0)/(d*f.d-0.0);if(c>=eps) return true;else return false;};
	bool fraction operator==(fraction &f){double c=(f.d*n-f.n*d-0.0)/(d*f.d-0.0);if(fabs(c)<eps) return true;else return false;};
	bool fraction operator!=(fraction &f){double c=(f.d*n-f.n*d-0.0)/(d*f.d-0.0);if(fabs(c)>eps) return true;else return false;};
};
fraction fraction::operator/(fraction &f)
{
	if(f.n==0){cout<<"Error:devided by 0"<<endl;exit(1);}
	else return fraction(d*f.n,f.d*n);
}
int main()
{
	fraction a(1,2),b(2,3),c,d,e,f;
	c=a+b;cout<<"a+b="<<"\t";c.show;
	d=a-b;cout<<"a-b="<<"\t";d.show;
	e=a*b;cout<<"a*b="<<"\t";e.show;
	f=a/b;cout<<"a/b="<<"\t";f.show;
	if(a>b) cout<<"a>b"<<endl;
	if(a>=b) cout<<"a>=b"<<endl;
	if(a<b) cout<<"a<b"<<endl;
	if(a<=b) cout<<"a<=b"<<endl;	
	if(a==b) cout<<"a==b"<<endl;
	if(a!=b) cout<<"a!=b"<<endl;
    return 0;
}


---------------------11.13---------------------
#include<iostream>
#include<cmath>
using namespace std;
const double esp=1e-10;
class vector3D
{
private:
	double x,y,z;
public:
		vector3D(double ix,double iy,double iz):x(ix),y(iy),z(iz){}
	void show()
	{cout<<"("<<x<<","<<y<<","<<z<<")"<<endl;}
	vector3D operator+(vector3D &v){return vector3D(x+v.x,y+v.x,z+v.z);};
	vector3D operator-(vector3D &v){return vector3D(x-v.x,y-v.x,z-v.z);};
	bool operator==(vector3D &v){return x==v.x&&y==v.y&&z==v.z;};
	bool operator!=(vector3D &v){return x!=v.x||y!=v.y||z!=v.z;};
    friend double vector3D *operator&(vector3D &a,vector3D &b)
	{return a.x*b.x,a.y*b.y,a.z*b.z;}
};

int main()
{
	vector3D v1(1,2,3),v2(2,3,4),v3,v4,v5,v6;
	v1.show();v2.show();
	v3=v1+v2;v3.show();
	if(v3-v2==v1)cout<<"v3-v2==v1"<<endl;
	else cout<<"v3-v2!=v1"<<endl;
    v4=v3-vector3D(1,3,5);v4.show();
	v5=5*v2;v5.show();
	v6=v1&v2;v6.show();
	return 0;
}


---------------------11.14---------------------
#include<iostream>
#include<cmath>
using namespace std;
const double esp=1e-10;
class Set
{
private:
	int p[1000];
	int n;
public:
	Set(int aa[1000],int nn=1)
	{
		for(int i=0;i<nn;i++)
		{p[i]=aa[i];}
		n=nn;
	}
	void show()
	{for(int i=0;i<n;i++) cout<<p[i]<<"\t";cout<<endl;}
	bool in(int x)
	{
	   for(int i=0;i<n;i++) if(p[i]=x) break;
	   if(i!=n) return true;
	   if(i=n) return false;
	}
	bool empty()
	{
		if(n==0) return true;
		if(n>0) return false;
	}
	Set operator+(Set &b);
	Set operator+(int x){Set c(*this); if(!c.in(x))c.p[c.n++]=x; return c; }
	Set operator-(int x);
	Set operator*(Set &b);
	bool operator==(Set &b){return (*this+b).n==(*this*b).n;};
	bool operator!=(Set &b){ return !(*this==b); };
   

};
    Set Set::operator+(Set &b)
	{
		Set c(*this); 
	    for(int i=0;i<b.n;i++) 
		if(!in(b.p[i])) c.p[c.n++]=b.p[i]; 
		return c; 
	}
	Set Set::operator-(int x)
	{
		Set c(*this);  
		int i,j;	
		for(i=0;i<c.n;i++) 
		if(c.p[i]==x) break;
	    if(i<c.n) 
		{ for(j=i;j<c.n-1;j++) c.p[j]=c.p[j+1]; c.n--; }  
	    return c;
	}
	Set Set::operator*(Set &b)
	{
	    Set c; 
		for(int i=0;i<b.n;i++) 
		if(in(b.p[i])) c.p[c.n++]=b.p[i]; 
		return c;
	}
int main()
{
	int b1[1000]={1,2,3},b2[1000]={2,3,4,5};
	Set a(b1,3),b(b2,4),c,d,e,f;
	a.show;b.show;
	c=a+b;c.show;
	d=a+10;d.show;
	e=a*b;e.show;
	f=b-2;f.show;
	return 0;
}


---------------------11.14---------------------
#include<iostream>
#include<cmath>
using namespace std;
class money
{
private:
	int y,j,f;
public:
	money(){}
	money(int yy,int jj,int ff)
	{y=yy;j=jj;f=ff;}
	money operator+(money &b)
	{return money(b.y+y,b.j+j,b.f+f);}
	money operator-(money &b)
	{return money(y-b.y,j-b.j,f-b.f);}
	money operator++(int)
	{money t(*this);f++;return t;}
	money operator--(int)
	{money t(*this);f--;return t;}
	friend ostream &operator<<(ostream &os,money &b)
	{os<<b.y<<"Ôª"<<b.j<<"½Ç"<<b.f<<"·Ö"<<endl;}
	friend istream &operator>>(istream &is,money &b)
	{is>>b.y>>b.j>>b.f;return is;}
	operator double()
	{return (100*y+10*j+f)/100.0;}
        friend double x(money &b)
	{return (100*b.y+10*b.j+b.f)/100.0; }
};
};
int main()
{
	money a(1,2,3),b(2,3,4),c,d,e,f,g,h;
	c=a+b;cout<<double(c)<<endl;
	d=a-b;cout<<double(d)<<endl;
	e=a++;cout<<double(e)<<endl;
	f=a--;cout<<double(f)<<endl;
	cout<<"ÇëÊäÈë"<<endl;
	cin>>g;cout<<double(g)<<endl;
return 0;
}


---------------------11.15---------------------
#include<iostream>
#include<cmath>
using namespace std;
class Array
{
private:
	int *p;
	int s,n;
	void copy(int ss,int nn,int*pp=0)
	{
		s=ss;n=nn;p=new int[s];
		if(pp)
		for(int i=0;i<n;i++)
		p[i]=pp[i];
	}
public:
	Array(){};
	Array(int *pp,int ss,int nn) {copy(10,0);}
	Array(Array &b) {copy(b.s,b.n,b.p);}
	~Array() {delete[]p;}
	void show()
	{
		for(int i=0;i<n;i++)
		cout<<p[i]<<"\t"<<endl;
	}
    int getSize()
	{return n;}
	Array &operator=(Array &b)
	{
		delete[]p;
		copy(b.s,b.n,b.p);
		return *this;
	}
	Array &operator+=(int x)
	{
		if(n==s) {int *m=p;copy(s+5,n,m);delete[]m;}
		p[n++]=x;
		return *this;
	}
    Array &operator-=(int x)
	{
		for(int i=0;i<n;i++){if(p[i]==x) break;}
		if(i<n){for(int j=i;j<n-1;j++) p[j]=p[j+1];n--; }
		return *this;
	}
	int &operator[](int k)
	{
		static int t=0x80000000;
		if(k>=0&&k<=n) return p[k];
		else return t;
	}
};
int main()
{
	Array a;int i;
	for(i=1;i<=10;i++) a+=i*i ;a.show() ;
	for(i=20;i<=80;i++) a-=i  ;a.show() ;
	i=a.getSize();a[i-1]=12345;a.show();
	return 0;
}


